# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
length(x) >= length(y)
}
is_twice_as_long(abc,qweqwe)
is_twice_as_long("asdsad", "dqwondn")
is_twice_as_long("abc","cdef")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
length(x) >= length(y)*2
}
is_twice_as_long("I am Ryan","I'm Ryan")
is_twice_as_long("I am","I'm Ryan")
is_twice_as_long("I am","I am Ryan")
is_twice_as_long("I am","I'm")
is_twice_as_long("I am","Ryan")
is_twice_as_long("I am hello","Ryan")
is_twice_as_long("I","I'm Ryan")
is_twice_as_long("I am","1")
is_twice_as_long("I am h we qdq","I'm Ryan")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
length(x) > length(y)*2
}
is_twice_as_long("abc","hello motor")
is_twice_as_long("I am a s w f","I'm Ryan")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function("x","y") {
length("x") > length("y")*2
}
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
length("x") > length("y")*2
}
is_twice_as_long("abc", "hello you")
is_twice_as_long("abc hello you boy", "hello you")
is_twice_as_long("abc hello you boy hi heool", "hello you")
?length
length(hi hello)
length("hi hello")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") > nchar("y")*2
}
is_twice_as_long("hello", "hi")
nchar(hello)
nchar("hello")
nchar("hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") > nchar("y")*2
}
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") >= nchar("y")*2
}
is_twice_as_long("Ryan","Si")
is_twice_as_long("Ryan","S")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") >= 2*nchar("y")
}
is_twice_as_long("hello", "hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") >= nchar("y")
}
is_twice_as_long("hello", "hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") >= 2* nchar("y")
}
is_twice_as_long("hello", "hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") >= nchar("2*y")
}
is_twice_as_long("hello", "hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") >= [2*nchar("y")]
}
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar("x") >= 2*nchar("y")
}
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar(x) >= 2*nchar(y)
}
is_twice_as_long("hello", "hi")
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(x,y) {
nchar(x) >= 2*nchar(y)
}
is_twice_as_long("hello", "hij")
